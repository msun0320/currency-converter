{"version":3,"sources":["components/Converter.js","App.js","index.js"],"names":["Converter","useState","currencies","setCurrencies","fromCurrency","setFromCurrency","toCurrency","setToCurrency","fromAmount","setFromAmount","toAmount","setToAmount","BASE_URL","CONVERT_API","CURRENCIES_API","fetchData","api","a","fetch","currencyResponse","json","useEffect","then","data","Object","entries","rates","className","htmlFor","name","id","value","onChange","e","target","map","currency","type","defaultValue","Math","round","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAgFeA,G,MA7EG,WAAO,IAAD,EACaC,mBAAS,IADtB,mBAChBC,EADgB,KACJC,EADI,OAEiBF,mBAAS,OAF1B,mBAEhBG,EAFgB,KAEFC,EAFE,OAGaJ,mBAAS,OAHtB,mBAGhBK,EAHgB,KAGJC,EAHI,OAIaN,mBAAS,GAJtB,mBAIhBO,EAJgB,KAIJC,EAJI,OAKSR,mBAAS,IALlB,mBAKhBS,EALgB,KAKNC,EALM,KAOjBC,EAAW,+BACXC,EAAW,UAAMD,EAAN,yBAA+BJ,EAA/B,iBAAkDJ,EAAlD,eAAqEE,GAChFQ,EAAc,UAAMF,EAAN,cAEdG,EAAS,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEACcC,MAAMF,GADpB,cACXG,EADW,gBAEJA,EAAiBC,OAFb,mFAAH,sDAKfC,qBAAU,WACTN,EAAUD,GAAgBQ,MAAK,SAAAC,GAC9BpB,EAAcqB,OAAOC,QAAQF,SAE5B,IAEHF,qBAAU,WACLjB,IAAiBE,EAEnBK,EADGH,EAAa,GAAoB,KAAfA,EACT,GAEAA,GAEHA,EAAa,GAAoB,KAAfA,EAC5BG,EAAY,IACa,IAAfH,EACVG,EAAY,GAEZI,EAAUF,GAAaS,MAAK,SAAAC,GAAI,OAAIZ,EAAYY,EAAKG,MAAMpB,SAE1D,CAACF,EAAcE,EAAYE,IAc9B,OACC,sBAAKmB,UAAU,YAAf,UACI,mEAEA,sBAAKA,UAAU,iBAAf,UACC,gCACF,uBAAOC,QAAQ,OAAf,kBAAkC,uBAClC,wBAAQC,KAAK,OAAOC,GAAG,OAAOC,MAAO3B,EAAc4B,SAnBtB,SAAAC,GAChC5B,EAAgB4B,EAAEC,OAAOH,QAkBtB,SACE7B,EAAWiC,KAAI,SAAAC,GAAQ,OAAI,wBAAQL,MAAOK,EAAS,GAAxB,SAA+CA,EAAS,IAAvBA,EAAS,SAC9D,uBAET,uBAAOC,KAAK,SAASC,aAAc9B,EAAYwB,SAfpB,SAAAC,GAC9BxB,EAAcwB,EAAEC,OAAOH,aAiBrB,gCACC,uBAAOH,QAAQ,KAAf,gBAA8B,uBAC9B,wBAAQC,KAAK,KAAKC,GAAG,KAAKC,MAAOzB,EAAY0B,SAxBlB,SAAAC,GAC9B1B,EAAc0B,EAAEC,OAAOH,QAuBpB,SACE7B,EAAWiC,KAAI,SAAAC,GAAQ,OAAI,wBAAQL,MAAOK,EAAS,GAAxB,SAA+CA,EAAS,IAAvBA,EAAS,SAGvE,mBAAGT,UAAU,YAAb,SAAuC,KAAbjB,EAAkB6B,KAAKC,MAAiB,IAAX9B,GAAkB,IAAM,gBC/DrE+B,G,MANH,WACV,OACE,cAAC,EAAD,CAAWd,UAAU,gBCFzBe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8ef78382.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Converter.css\";\n\nconst Converter = () => {\n\tconst [currencies, setCurrencies] = useState([]);\n\tconst [fromCurrency, setFromCurrency] = useState(\"USD\");\n\tconst [toCurrency, setToCurrency] = useState(\"EUR\");\n\tconst [fromAmount, setFromAmount] = useState(1);\n\tconst [toAmount, setToAmount] = useState(\"\");\n\n\tconst BASE_URL = \"https://api.frankfurter.app/\";\n\tconst CONVERT_API = `${BASE_URL}latest?amount=${fromAmount}&from=${fromCurrency}&to=${toCurrency}`;\n\tconst CURRENCIES_API = `${BASE_URL}currencies`;\n\n\tconst fetchData = async api => {\n\t\tconst currencyResponse = await fetch(api);\n\t\treturn await currencyResponse.json();\n\t};\n\n\tuseEffect(() => {\n\t\tfetchData(CURRENCIES_API).then(data => {\n\t\t\tsetCurrencies(Object.entries(data));\n\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (fromCurrency === toCurrency) {\n\t\t\tif (fromAmount < 0 || fromAmount === \"\") {\n\t\t\t\tsetToAmount(\"\");\n\t\t\t} else {\n\t\t\t\tsetToAmount(fromAmount);\n\t\t\t}\n\t\t} else if (fromAmount < 0 || fromAmount === \"\") {\n\t\t\tsetToAmount(\"\");\n\t\t} else if (fromAmount === 0) {\n\t\t\tsetToAmount(0);\n\t\t} else {\n\t\t\tfetchData(CONVERT_API).then(data => setToAmount(data.rates[toCurrency]));\t\t\t\n\t\t}\n\t}, [fromCurrency, toCurrency, fromAmount]);\n\n\tconst handleFromCurrencyChange = e => {\n\t\tsetFromCurrency(e.target.value);\n\t};\n\n\tconst handleToCurrencyChange = e => {\n\t\tsetToCurrency(e.target.value);\n\t};\n\n\tconst handleFromAmountChange = e => {\n\t\tsetFromAmount(e.target.value);\n\t};\n\n\treturn (\n\t\t<div className=\"Converter\">\n\t\t    <h2>Always get the real exchange rate</h2>\n\n\t\t    <div className=\"Converter-body\">\n\t\t\t    <div>\n\t\t\t\t\t<label htmlFor=\"from\">From</label><br />\n\t\t\t\t\t<select name=\"from\" id=\"from\" value={fromCurrency} onChange={handleFromCurrencyChange}>\n\t\t\t\t\t\t{currencies.map(currency => <option value={currency[0]} key={currency[0]}>{currency[1]}</option>)}\n\t\t\t\t\t</select><br />\n\n\t\t\t\t\t<input type=\"number\" defaultValue={fromAmount} onChange={handleFromAmountChange}/>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<label htmlFor=\"to\">To</label><br />\n\t\t\t\t\t<select name=\"to\" id=\"to\" value={toCurrency} onChange={handleToCurrencyChange}>\n\t\t\t\t\t\t{currencies.map(currency => <option value={currency[0]} key={currency[0]}>{currency[1]}</option>)}\n\t\t\t\t\t</select>\n\n\t\t\t\t\t<p className=\"to-amount\">{toAmount !== \"\" ? Math.round(toAmount * 100) / 100 : \"\"}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Converter;","import React from \"react\";\nimport Converter from \"./components/Converter\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <Converter className=\"Converter\"/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}